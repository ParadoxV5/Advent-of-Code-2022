interface _FilterToProc[T]
  include _ToProc
  def to_proc: () -> ^(T) -> boolish
end

class ConvexBoard < Board2D
  class LandSequence
    attr_reader range: Range[Integer]
    attr_reader obstructions: Array[Integer]
    
    def initialize: (Range[Integer] range, Array[Integer] obstructions) -> void
    def self.[]: [E] (
      *E array,
      ?is_land: _FilterToProc[E],
      ?is_obstruction: _FilterToProc[Integer]
    ) -> LandSequence
    
    def step: (Integer from, ?Integer to) -> Integer
    def step_by: (Integer from, ?Integer steps) -> Integer
  end
  
  type sequences = Array[LandSequence]
  
  attr_reader columns: sequences
  attr_reader rows: sequences
  def initialize: (
    ?rows: sequences, ?columns: sequences,
    ?x: coord, ?y: coord, ?facing: Integer
  ) -> void
  
  def self.table_to_sequences: [E] (
    Array[Array[untyped]] table,
    ?is_land: _FilterToProc[E],
    is_obstruction: _FilterToProc[Integer]
  ) -> sequences
  def self.[]: [E] (
    Array[Array[untyped]] table,
    ?is_land: _FilterToProc[E],
    is_obstruction: _FilterToProc[Integer]
  ) -> instance
end
